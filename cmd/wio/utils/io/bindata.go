// Code generated by go-bindata.
// sources:
// ../../../../assets/cli-helper/app-help.txt
// ../../../../assets/cli-helper/command-help.txt
// ../../../../assets/cli-helper/subcommand-help.txt
// ../../../../assets/configurations/structure-avr.json
// ../../../../assets/templates/cmake/CMakeListsAVR.txt.tpl
// ../../../../assets/templates/cmake/CMakeListsNative.txt.tpl
// ../../../../assets/templates/config/app-helper.txt
// ../../../../assets/templates/config/dependencies-helper.txt
// ../../../../assets/templates/config/pkg-helper.txt
// ../../../../assets/templates/config/targets-helper.txt
// ../../../../assets/templates/gitignore/.gitignore-clion
// ../../../../assets/templates/gitignore/.gitignore-general
// ../../../../assets/templates/ide/clion/app/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeLists.txt.tpl
// ../../../../assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl
// ../../../../assets/templates/readme/APP_README.md
// ../../../../assets/templates/readme/PKG_README.md
// ../../../../assets/templates/sample-program/app/main.cpp
// ../../../../assets/templates/sample-program/pkg/main.cpp
// ../../../../assets/templates/sample-program/pkg/output.cpp
// ../../../../assets/templates/sample-program/pkg/output.h
// ../../../../assets/templates/sample-program/pkg-header-only/main.cpp
// ../../../../assets/templates/sample-program/pkg-header-only/printer.h
// DO NOT EDIT!

package io

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCliHelperAppHelpTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x54\xc1\x6e\xdb\x30\x0c\xbd\xeb\x2b\x08\xa3\xc7\xd4\x1f\x10\x74\x01\xb2\x02\x5b\x77\xd9\xa1\x40\xb3\x43\xb6\x03\x63\x33\x8e\x3a\x59\x34\x24\x39\x5d\x11\xf8\xdf\x47\xc9\x76\x1c\x27\x45\x7d\x09\x25\xf1\x3d\xbe\x47\x89\xf9\xa5\x19\xb4\x07\xb4\xc0\x0d\x59\xf0\xdc\xba\x82\x40\x73\x80\x92\x8e\x64\xb8\xa9\xc9\x06\x20\x7b\xd4\x8e\x6d\x8c\xd5\xa3\x23\x0c\xb4\x80\xaf\xad\x36\xe5\x42\x90\x25\xbc\x34\x86\xb1\x84\xf5\xe6\x19\x1a\xc7\xaf\x54\x04\x0f\x7b\xc7\x35\x3c\x72\x5d\x4b\x82\xd1\x96\x72\xa5\xe2\x8a\xed\xb8\xe9\x97\x4a\x81\x7c\x6f\xa2\xa0\x48\x9c\xf0\xd0\x18\x0c\x7b\x76\xf5\x4a\xc2\x9e\x08\xc2\x7b\x43\x2b\xd8\x72\x13\x34\x5b\xff\x27\x41\xe2\xd7\xcb\x00\x04\x4b\x6f\x10\x5d\x0c\x80\x89\xd4\xb5\xf6\x03\x5c\x92\x0d\xe1\x40\x97\x20\xd8\xa1\xa7\x12\x44\x1c\x1a\x93\x0e\x0b\xb6\x7b\x5d\xb5\x0e\x13\x5c\x9a\xb1\x17\x0f\xe5\x9c\xfc\xfe\xbe\xed\x8d\xdf\x56\x19\x3a\x72\x5d\x26\x70\xec\x34\x86\x80\xc5\x41\xea\x51\xbd\xa3\xb2\x94\x40\x7a\xad\x0b\x9a\xd8\xb5\xf5\x21\x2a\xb9\x25\xfe\xd1\x9f\xf8\x94\xd6\x60\xf1\x17\x2b\x92\xeb\x8b\x0a\xe5\xfe\x4a\xb2\x85\x26\xaf\xd4\x8b\x97\xfd\x25\x9c\x4e\xf9\x13\x99\xe6\x27\xd6\xd4\x75\xb2\xd2\x7b\xc8\x37\xda\xeb\x9d\xa1\x6f\x06\x2b\xdf\x75\xdb\xca\xf0\x0e\x0d\x8c\x85\x4e\x27\x61\xe9\xba\x3e\x75\xbc\x29\xc1\x16\x7d\x08\xdb\x31\xb8\x02\x0c\xe4\x6b\x57\xf9\x54\x3b\x52\xcc\x57\x64\xbc\xfc\x6e\xd1\x55\x6d\x7c\x47\x3e\xcf\xf3\x11\x1c\xdd\x25\xbc\x91\x27\x98\xaf\xdb\x70\x60\x27\x45\xd5\xf7\x99\xb6\x65\x9f\xe6\xd0\x56\x74\x6d\x43\x8a\x8d\x34\x83\xfe\x99\x8d\xe6\xdd\xe9\xea\x10\x40\x72\xd6\x47\xd4\x06\x05\x39\x5a\x12\xde\x33\xe9\x64\x38\x21\xad\x8c\x41\xfe\xa4\x4b\x8a\x4d\x14\x8f\x91\xfe\x95\xb5\x68\x8c\x1d\xf5\x90\x2d\x20\x8b\xa9\x90\xfd\x0e\x29\xc8\xcf\x6e\x65\xcb\x66\x70\x21\xe4\x56\xd6\xdc\xc1\x67\x66\xef\xb4\xdc\xec\xbf\x05\xdc\xf5\x87\xb0\xfc\x72\xeb\x5f\x18\xfb\xb4\xab\x3e\x0c\x98\x8f\x25\x9c\x3b\x23\x20\x75\x5e\x0c\xb5\x67\xa7\x97\x94\x49\x3c\x39\x9f\x68\xd5\x86\xbc\x93\x68\x04\x4d\x07\x13\x44\x3d\xcb\xb4\x64\x69\xd0\x87\xd7\xf3\x70\x90\x8e\xae\x32\x90\x61\x87\x9a\x9d\xfc\xe3\xd8\x38\xf7\x69\xda\x00\x77\xdc\x06\x99\xec\x21\x39\x57\xff\x03\x00\x00\xff\xff\x3a\xf6\xb2\xea\xa5\x04\x00\x00"

func assetsCliHelperAppHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperAppHelpTxt,
		"assets/cli-helper/app-help.txt",
	)
}

func assetsCliHelperAppHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperAppHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/app-help.txt", size: 1189, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperCommandHelpTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\x4d\x6e\x03\x21\x0c\x85\xf7\x9c\xc2\xca\x01\x38\x40\x76\x51\xab\xaa\xab\x2e\xaa\xb6\x9b\xa8\x0b\x27\x71\x29\x12\x03\x11\x66\xfa\x23\xc4\xdd\x6b\x98\xa1\x1a\xb2\x82\x67\xbf\xef\x19\x93\xb3\x7e\x65\x34\x54\x8a\x52\xed\xb2\x87\x9c\xed\x07\x2c\xd5\x17\xfa\x49\xa5\x74\x4f\x57\xe4\x98\x5a\xf5\x91\xdc\xf5\x09\xa7\x26\x2a\xf3\x66\xd9\x9e\x1c\x3d\x38\x34\x5c\x0a\x1c\xcf\x61\x9a\xd0\x5f\x20\x5c\x93\x0d\x9e\xdf\x05\xf5\x17\x69\x2c\xee\x43\x34\xbc\xce\x96\xac\x41\x2d\x13\x8e\x18\xcd\x3c\x91\x4f\xac\xb5\xee\xf0\xff\x51\x23\xee\x30\x91\x09\xf1\xb7\xbe\xbe\xdf\xf7\x0a\x40\x26\x6c\x7a\x03\x72\x4f\x7c\x8e\xb6\x3d\xa8\x52\x1b\xd9\xc1\xc1\x31\xb0\xe3\x7e\x4a\x1d\xbe\xd0\x3a\x94\x0a\xac\x9b\xf2\x9a\x11\xd1\x1b\xba\xf5\x4b\xb4\x40\xad\xbf\xdd\x44\x3d\xcf\x1e\x76\xdf\x36\xc0\xa7\x7c\xe7\x0e\x52\x00\x26\x02\xe3\xc2\x09\x5d\xff\x3a\xad\xfe\x02\x00\x00\xff\xff\xd0\xcb\xcd\x27\xa9\x01\x00\x00"

func assetsCliHelperCommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperCommandHelpTxt,
		"assets/cli-helper/command-help.txt",
	)
}

func assetsCliHelperCommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperCommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/command-help.txt", size: 425, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsCliHelperSubcommandHelpTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x91\xcf\x4e\xc3\x30\x0c\xc6\xef\x79\x0a\x2b\x67\x94\x07\xe8\x6d\x42\x42\x9c\x40\x42\xc0\x65\x70\xf0\x98\x09\x41\x69\x32\xd5\x19\x20\x45\x7d\x77\xdc\x39\xd9\x54\x38\xb5\xfe\xf3\x7d\xfe\xf5\x6b\xad\xee\x89\xd1\xd3\x3c\x1b\x73\x7a\x19\xa0\xd6\xf0\x0e\xda\x7d\xa4\x9f\x32\xcf\x7d\xa7\x57\x14\x99\x4e\xdd\x5b\x8a\x87\x3b\x1c\xa5\x80\xb7\x3c\x8e\x98\xf6\xaa\x7d\x0e\x1c\x76\x91\x6e\x22\x7a\x96\xd9\xb6\x0d\x21\x1f\x4a\xc8\x89\x5f\xc5\x22\xed\x65\xa0\xdb\x9b\xc9\x73\x63\x10\xcf\x55\xa5\x97\xb6\x38\xf9\xe3\x48\xa9\xb0\x73\xae\x8b\xdb\xc3\x98\xcd\x17\x86\x88\x72\xae\x33\xf0\x50\xeb\x84\xc9\xd3\x19\xe4\x1a\x0b\xf9\x3c\x05\xe2\x45\xb7\xdc\x54\x6a\x03\x20\x0c\xad\x18\xce\xc6\x7f\xc4\xcd\x55\xd7\x17\xc1\x67\x0e\x49\x2d\x18\xec\x15\xd8\x45\x63\x5f\x8a\xbd\x24\x75\xc1\x3b\x9b\xfe\xcf\xc5\xdc\x6b\x1c\x83\x62\xac\xaf\xb6\x1d\x31\xec\x98\xab\xaf\x7e\x38\x26\xb0\xdf\x21\xc3\x87\xfc\x02\x0b\x25\x03\x13\x81\x8f\x79\x87\xb1\xc7\xec\xcc\x6f\x00\x00\x00\xff\xff\x7a\x3a\xa0\x4c\xdd\x01\x00\x00"

func assetsCliHelperSubcommandHelpTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsCliHelperSubcommandHelpTxt,
		"assets/cli-helper/subcommand-help.txt",
	)
}

func assetsCliHelperSubcommandHelpTxt() (*asset, error) {
	bytes, err := assetsCliHelperSubcommandHelpTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/cli-helper/subcommand-help.txt", size: 477, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsConfigurationsStructureAvrJson = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x56\xc1\x6e\x9c\x30\x10\xbd\xf3\x15\xc8\xe7\x05\xdf\x2b\xf5\x10\xb5\x51\x0f\x6d\x24\xd4\x6b\x15\x55\x2e\x4c\x58\x2b\xc6\xb6\xc6\x43\x9a\xa8\xca\xbf\x77\x70\xaa\x0d\x21\x80\xd8\x66\xb7\xbb\x95\xb8\xd9\x7e\xc3\xc3\xef\x79\xfc\xe4\x5f\x49\x9a\x0a\xe5\xbd\x78\x97\x76\x43\x9e\x78\x45\xdb\xc0\xd3\x6f\x71\x9a\xfe\x59\x8e\x50\xe9\x6c\x20\x54\xda\x46\xfc\x7a\xf3\x8c\x80\x25\x7c\xe0\x45\x21\x45\x6f\xf5\x46\x1b\xe8\x53\xbd\xa4\x1b\xa1\x14\x70\xcf\x13\xd1\x63\x7e\xe2\x41\xd7\x74\xe4\x04\x8d\x37\x8a\x20\xc8\x5a\x93\xae\xad\x43\x90\xf9\x6e\x98\xd5\x60\x01\x95\x11\x83\xaf\xc9\x75\xdf\x3e\xd7\x0d\x71\x77\x07\x88\xba\x02\xae\xba\x51\x26\xc0\x00\x6e\x7d\xc5\xbf\x64\x90\xb0\x85\x1e\xf4\xb8\x39\xb8\x2a\x04\x55\x35\x20\x2f\x8a\xe2\xfb\xd7\xcb\x8b\x8f\x57\x97\x79\x53\x8d\xab\x99\x84\x8f\x2f\x86\xc9\xdf\x97\x46\x3b\xbb\x40\x10\xd7\xca\x58\x2b\xb9\xc5\xe4\x87\x2b\x75\x0b\x5f\x74\xa0\x90\xd3\x3d\xe5\xe4\x27\x8e\xea\x65\xdd\xff\xa9\xb0\x40\x7d\xc7\x05\x4b\x85\xf6\xca\x67\xf4\x76\x92\x96\xca\xdd\x8d\xaf\x93\x81\x01\x7b\x5e\xe8\x80\xe5\x5b\xef\xb4\x62\xb7\x60\x81\x99\x21\x16\x66\x1e\x5d\x8d\xaa\x89\x8e\x36\x4c\x93\x97\x9c\x4f\xa3\x06\x4e\xa1\x4b\x7b\x24\x82\xc7\x70\x2d\xff\xa9\x9d\xfc\xd1\x6a\xd3\xbf\xa0\x33\xdb\x1a\x3d\xc7\xa7\xdd\x74\x3b\x89\xbb\x10\xfe\xb6\x5e\x63\xfa\x7c\x62\xba\xf8\xfc\x69\x8d\xe9\x35\xa6\x5f\xeb\x3d\x72\x4c\x0b\xeb\xb2\x2d\xb7\x20\x60\xe6\xac\x79\x10\xe7\x16\xdb\x1c\x53\xd2\xb5\xe4\x5b\x9a\x0e\xee\x69\xfc\xe4\xd1\x2d\xb5\x2d\x4d\x5b\xc1\x61\xdc\xdb\xa4\x33\xc7\xb5\xb7\x9f\xdb\x59\x37\x5f\xa1\x7f\xed\xe5\x3e\x99\xb9\xd3\xf9\x56\x91\x7d\x97\xa4\x47\x6d\x09\x70\x4a\xf1\x24\x7c\xfa\xf6\x61\x71\x14\xce\xaa\x79\xfe\xf1\x1b\xea\xf4\xcd\xb3\x3e\x1a\xe3\xa3\x31\x79\x4c\x7e\x07\x00\x00\xff\xff\xe5\x21\xd6\xc3\xdf\x0f\x00\x00"

func assetsConfigurationsStructureAvrJsonBytes() ([]byte, error) {
	return bindataRead(
		_assetsConfigurationsStructureAvrJson,
		"assets/configurations/structure-avr.json",
	)
}

func assetsConfigurationsStructureAvrJson() (*asset, error) {
	bytes, err := assetsConfigurationsStructureAvrJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/configurations/structure-avr.json", size: 4063, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsavrTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\xdd\x6e\xea\x38\x10\xbe\xe7\x29\x66\x29\x17\x61\xa5\x05\xb4\x7d\x82\x34\x98\x36\xdb\x40\x90\x93\xfe\x5d\x59\x26\x71\x8a\xb7\x89\x93\xe3\x38\xaa\xaa\x8a\x77\x3f\x13\xf3\xd3\xc0\xa9\xda\x9e\xa3\x46\x48\xc6\x33\xe3\x99\xcf\xdf\x7c\xe3\xb3\x6f\xf9\x7a\x67\x10\xaf\x65\x0d\xdb\x1f\x6f\x4c\xf9\xcf\xa3\x50\x42\x73\x23\x52\x58\xbd\xc0\xb3\x2c\x7b\xdf\x54\xa9\x57\x0b\xe3\x78\x73\xf7\x9a\xb0\x5b\x42\xe1\x7c\x34\x19\x4d\x86\xd6\xb8\xa4\xe1\x7f\xc4\x8b\xd9\xc2\x9d\x13\x78\x7d\xed\x6e\x37\x9b\xe3\x90\xa5\x1b\x5f\x41\xff\x2d\xa6\xdd\x6f\x36\xfd\x61\x27\x79\x1c\x86\x81\x77\xe5\xfa\x8b\x43\xf0\xb1\xe5\x24\x7c\x1e\x4e\x6f\x02\xb2\x8b\x1d\xbc\x6e\x8d\xde\x0d\xa5\x64\x11\xb3\x28\xbc\xa1\x1e\x61\x53\x9f\xee\x0f\x4d\xc9\x92\x2c\xa6\x64\xe1\x3d\xb0\x99\x1f\x10\x48\x45\x25\x54\x2a\x54\x22\x45\x3d\xec\x21\x9d\x3c\xcf\xc1\xac\x05\x54\xdc\xac\x6b\x30\x65\x99\x27\x6b\x2e\x15\x24\x5c\xc1\x4a\x00\x37\xe0\x98\x1d\xe3\x2b\x91\xf0\xa6\x16\x50\x66\x90\xca\x2c\x13\x5a\x28\x83\xe7\x92\x27\xfe\x28\xa0\xe0\x0a\x17\x8d\x49\x65\x06\x0e\xb9\xf7\xa3\x38\x7a\x03\x78\x72\xa5\x71\xf7\x92\x2d\x2e\x46\x49\x60\x2f\x0a\xf8\xbd\xc7\x8d\x05\xff\xfb\xe9\x44\x5e\x8b\xaf\xe0\x19\x8d\xbe\x1b\xd2\x47\x19\x4f\x51\x8d\x9b\x5a\x8f\xeb\x35\xd7\x62\x8c\x02\xfe\x53\x24\x5f\xcd\xd2\x56\x77\xb6\xc9\x0a\x51\xd7\xd8\x35\x67\xe6\xc6\x6e\xc0\x08\xa5\x21\x85\x7e\xdc\xd5\x80\x2a\x4d\x2b\x83\xac\x6c\x54\x3a\x82\x8b\x46\xe6\x29\x5c\xf1\x1c\xc7\xed\xaf\x36\x95\x42\x21\x38\x56\x47\x95\x2e\x2b\xa1\x0d\xca\xca\xea\x2e\x76\xe9\x25\x39\x8c\x48\x67\xb7\x9f\x90\x8b\xd0\xa5\x53\x74\xd9\x75\x6f\x9c\x51\x8c\xb8\x0b\xe9\x35\x3a\x0e\xff\xf7\x4e\x14\x38\x7d\x40\x87\x5d\x5b\x63\x2f\x29\xf8\x93\x60\x85\x54\xb2\x68\x0a\xa6\xc5\x8f\x46\x6a\x91\x3a\x38\xae\x91\x1f\x2e\x60\xdf\x9a\xdd\x1e\x4f\x20\xc8\xff\x45\x62\x9c\xc1\xf1\xd0\x82\x07\xde\xfd\x3d\xb8\xd1\x7c\xb8\xcb\x59\x95\xb9\x4c\x5e\x9c\x88\xc4\xe0\xcd\x97\x93\xc9\xbf\xe7\x10\x06\x53\x2c\x99\xc9\x5c\x38\x97\x41\x78\x81\x74\xe2\xd4\x45\x04\x22\xea\x59\x7e\xad\xba\x8e\xe6\x7c\x3c\xd8\x61\x1d\xff\x3d\x4a\xaa\xaa\xff\x71\x40\xf2\x89\x1f\xe9\xde\x3f\x75\x8c\xeb\xb4\x91\xaa\x64\x99\xd4\xc5\x33\x36\x1c\x2f\xd4\xa5\xd8\xf6\x16\x71\x45\x48\xc1\x01\xde\xd6\xba\xa5\x7d\xb0\xa3\xdd\x9a\x96\x21\x8d\xdb\x67\x0c\x97\x96\x55\xc3\xf5\xa3\x30\x2c\x29\x8b\x0a\xef\xca\x52\x91\x21\xbf\x46\x96\xaa\x3e\xa9\x02\x4b\xea\xdf\xba\x31\x01\x9b\xe5\xce\x0f\xd9\xa1\x65\x6c\xd0\x69\xdf\xd6\x7f\x10\x81\x17\xce\x97\xad\x1c\xa7\x64\xe6\x2f\xfc\x18\x1b\x13\xbd\x53\xb6\xac\x3e\x2f\xf9\x4b\xca\x59\xe0\x5e\xda\x64\x3d\xa9\x92\xbc\x49\x5b\x5e\x4e\x1e\xc0\x8d\x15\xab\x5b\x55\xd8\x5f\xde\x96\x80\x5c\xae\x34\xd7\xad\x6e\x7f\x06\x00\x00\xff\xff\x81\x18\xca\xeb\xa3\x06\x00\x00"

func assetsTemplatesCmakeCmakelistsavrTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsavrTxtTpl,
		"assets/templates/cmake/CMakeListsAVR.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsavrTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsavrTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsAVR.txt.tpl", size: 1699, mode: os.FileMode(436), modTime: time.Unix(1529538898, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesCmakeCmakelistsnativeTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x52\x5d\x6f\x9b\x30\x14\x7d\xe7\x57\x58\x6d\x1e\x92\x49\x4b\x2b\xed\x17\x30\x70\x32\xd6\xf0\x21\x43\xfa\xf1\x64\x11\xfb\xb6\xf3\x16\xc0\x33\x46\xdb\x14\xf1\xdf\x77\x81\x94\x92\xae\x5a\x5f\x62\x45\x0a\xe7\xde\xe3\x73\x8f\x8f\x7d\x79\x96\xe5\x5c\x92\xec\x9b\xaa\xc9\xf0\xcb\x1b\x5b\x7d\x7c\x82\x12\x4c\x6e\x41\x92\xdd\x1f\xf2\x4b\x55\xce\x99\x26\x39\x35\xd8\xb9\x17\xba\x37\x94\xdf\x52\x46\x3e\x2d\xaf\x97\xd7\x8b\xbe\x98\xb0\xf8\x2b\xf5\x32\x1e\xb9\x21\x25\x87\xc3\x14\xb6\xed\x29\x25\x71\xb3\x2f\xe4\xe2\x85\xd3\xe1\xb6\xbd\x58\x4c\xc4\xc3\xd8\xdf\x6e\xe8\xc0\x9c\x1d\x86\x9a\xb7\x65\x8c\x46\x19\x4f\xe3\x2d\xf3\x28\xf7\x03\x76\xd4\xf5\x69\x42\x23\x9f\x46\xde\x03\x5f\x05\x1b\x4a\x24\x68\x28\x25\x94\x42\x41\xbd\x70\x30\x9d\xc4\x54\x1a\x8c\x45\xd8\xf3\x33\x97\xad\xe9\xe8\x74\x82\x9e\x8d\xae\x18\x82\xbb\x98\xdd\x60\x7b\xfc\x7e\x6e\xa2\x05\xf6\x80\x8d\xfe\xbf\x2b\xe2\x80\xde\xa0\x23\x8a\xfc\x07\xf0\x42\x95\xaa\x68\x0a\x6e\xe0\x67\xa3\x0c\xc8\x39\x06\x95\x06\x71\x34\x9e\xe3\x88\x71\xa7\x36\xd5\x77\x10\x76\x3e\x3b\x8d\x8b\x78\xc4\xbb\xbf\x27\x6e\x1a\xa2\xf8\xa3\xda\xc3\x7c\xbd\x89\x3f\x73\x46\x31\x81\x94\xa2\xce\xd4\x32\xef\x08\xb5\x43\x70\xbd\xc8\x74\x31\xa4\xed\xd5\xec\x68\xf2\xea\xc3\x52\x68\xfd\x3e\x47\xbc\x4f\x59\x38\xb9\x94\x1c\x7e\x83\x68\x6c\xbe\x43\x6b\xa7\x6e\x70\xf3\x5b\xf6\xf0\xac\x36\x37\x4f\x60\xb9\xa8\x0a\x8d\x15\x2e\xe1\x11\x73\xb2\xaa\x2a\xeb\xd7\x12\x09\x0b\x6e\xdd\x8c\x92\xde\xcc\x5d\x10\xf3\xf1\x0a\xf8\x6c\x72\x1d\x7d\x7b\xbc\x3e\x2f\x0e\x13\x74\xcb\x7d\xba\x0a\xa2\x20\xc3\x7c\xd3\xf6\xdf\xa9\x95\xfe\xdf\xc4\xb7\x15\x57\x1b\x77\xdd\x6b\x39\xaa\x14\xfb\x46\x76\x47\x7e\xf5\xe2\x86\x47\xe0\x6a\xbd\x57\x22\xef\x26\x90\xbd\xda\x99\xdc\x74\x0f\xee\x6f\x00\x00\x00\xff\xff\xee\x03\xdd\xe3\xe3\x03\x00\x00"

func assetsTemplatesCmakeCmakelistsnativeTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesCmakeCmakelistsnativeTxtTpl,
		"assets/templates/cmake/CMakeListsNative.txt.tpl",
	)
}

func assetsTemplatesCmakeCmakelistsnativeTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesCmakeCmakelistsnativeTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/cmake/CMakeListsNative.txt.tpl", size: 995, mode: os.FileMode(436), modTime: time.Unix(1529538900, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigAppHelperTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x4d\x6a\x43\x31\x0c\x84\xf7\x3d\xc5\x40\x36\x2d\x79\xcd\x01\xde\x3a\x74\xd3\x4d\x21\xbd\x80\x9e\xac\xe7\x88\xd8\x96\xf1\x0f\xa1\xb7\xaf\xeb\x66\x13\x98\x85\x34\xa3\xf9\xd0\x01\x4e\x76\x4d\x02\x1f\x6c\xa3\x00\xca\x19\x6c\x69\x57\xdf\x0b\x35\xb5\x54\x4f\xf8\xbe\x6a\xc5\x10\xa5\xbf\x38\x28\xcf\x60\xac\x0e\x3c\xbc\x4d\xb0\x75\x0d\x6d\x41\xe9\xff\x6e\xcf\xc1\xc8\x89\x3b\xe1\x62\x51\xd0\xa4\x44\x4d\x16\xcc\xff\xac\x2f\x07\xbc\xe3\xa3\x50\x94\xbb\x95\xdb\x8a\xcb\xf9\x13\xbb\x15\xb4\xab\x3c\xc1\x5f\xd9\x2a\x2d\xa0\xe2\xfa\xa8\x2e\xe0\xa1\xe3\x71\x81\x34\x7e\x9b\x8c\xaf\x40\x6d\x14\xe3\x8a\xfc\x98\xd0\x6c\x3e\xe2\x9e\x40\x23\x99\xf7\x67\xc9\x92\x9c\x24\x56\xa9\x2b\xee\x6a\xc8\xc4\x37\xf2\x52\x7f\x03\x00\x00\xff\xff\x4f\xa8\xbb\x64\x03\x01\x00\x00"

func assetsTemplatesConfigAppHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigAppHelperTxt,
		"assets/templates/config/app-helper.txt",
	)
}

func assetsTemplatesConfigAppHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigAppHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/app-helper.txt", size: 259, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigDependenciesHelperTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8f\xb1\x4e\xf3\x30\x14\x85\xf7\xff\x29\x8e\xdc\xf5\x27\x2a\x8c\x99\xa9\xc4\x10\x91\x8d\x05\x05\xe4\xda\x37\xc1\xe0\xf8\x5a\xb6\xd3\xd2\xb7\xe7\xa6\xa0\x26\x12\x08\x91\x2d\xf7\x9c\xef\xe8\xf3\x06\xca\x52\xa4\x60\x29\x18\x47\x59\xa1\xe8\x01\xda\x7b\x3e\x66\x4c\x99\x12\x0a\xc3\x05\xe3\x27\x4b\xe0\xf2\x22\x87\xa3\x63\x44\x6d\xde\xf4\x40\x59\x22\xc9\xe5\xec\x12\x62\xe2\x57\x32\xa5\xc2\xed\x6a\x0f\x46\x07\xec\x09\xd1\x6b\x43\xf6\xdf\x46\x00\x1c\x24\xe5\x84\x9e\xbd\x95\x39\xd7\xcf\x7c\x26\xe8\x44\xf0\x6c\xb4\xbf\xac\x57\xd8\xbd\xeb\x31\x7a\xca\xb5\x90\x6b\xcd\xf9\x1f\xd8\x08\xe9\xc4\x21\x43\x23\xd1\xc8\x85\x96\xd2\x09\xe7\xca\x78\x6a\xdc\xfe\xb3\x3d\x7f\x07\x4a\xd9\x71\xa8\xf1\xb4\xad\xb6\xd5\xf5\xe5\xbe\x60\xcf\xbd\xd7\x43\xae\xf1\xd8\xfd\x14\x5a\xea\x5d\x70\x45\x26\xe6\x8a\xba\xdb\x35\x4d\xab\xfe\x43\xdd\xb7\xad\xea\xbe\x39\x7d\x3d\x74\xe1\x17\xa5\x9b\xb5\xd3\xdc\xaa\x51\xd2\x44\xbf\x09\xa9\xab\xde\xf0\x18\x9d\x27\xf5\x17\xb7\x87\xf3\xac\xea\x3e\x02\x00\x00\xff\xff\xc3\x0f\xf6\x3b\xe1\x01\x00\x00"

func assetsTemplatesConfigDependenciesHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigDependenciesHelperTxt,
		"assets/templates/config/dependencies-helper.txt",
	)
}

func assetsTemplatesConfigDependenciesHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigDependenciesHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/dependencies-helper.txt", size: 481, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigPkgHelperTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8f\x41\x6e\xeb\x30\x0c\x44\xf7\xff\x14\x83\x64\xf3\x8b\xb8\x39\x80\xd7\x69\x37\xdd\x14\x48\x2f\x40\x4b\x8c\xcc\xc6\x16\x05\x89\x6e\x90\xdb\x97\x76\x8a\x02\x05\xb8\x20\x46\x9c\xa7\x99\x3d\x22\x5f\x24\x33\xd2\xa4\x03\x4d\x28\xd7\x84\xa0\xf9\x22\x69\xa9\x64\xa2\xb9\x1d\xf1\x31\x4a\x83\x0f\xa1\x50\xb8\x52\x62\x50\x8e\xab\x10\x2a\x93\x71\x84\x29\x06\xc6\xd2\x7c\x1d\xee\x50\x1b\xb9\xe2\x26\x8a\x52\xf5\x93\x83\x39\xe2\xe5\x8b\x33\x6c\xd4\x25\x8d\xff\xf6\xbf\x98\x40\x39\xab\xad\xde\x61\x91\xc9\x3a\x88\xad\xda\x2a\x18\x37\x7b\xe0\x96\x26\x39\x61\xb7\x0a\x6d\x87\x28\xd5\x89\x5a\xef\x47\x9c\x75\x5e\xef\xea\x2c\x59\x27\x4d\xf7\xde\xc9\xcf\x78\xad\x34\xf3\x4d\xeb\xb5\xc7\xf9\xf4\x86\x8b\x56\xff\xd7\x13\x97\x32\x49\xd8\x1a\xe1\x7f\xd0\x46\x1d\xa8\xc6\xc5\xad\x1d\x82\xcf\xe1\xd0\x81\x2d\x3c\x6d\x8c\xf7\x89\xcc\x8d\x73\x8f\xf2\xb3\x6d\x15\x3d\x63\xfc\x03\xf2\x97\xed\xfe\xc4\x85\x73\xe4\x1c\x84\x5b\xff\x68\xfe\x68\xd8\xbe\x03\x00\x00\xff\xff\xd3\x8f\x84\x75\x5f\x01\x00\x00"

func assetsTemplatesConfigPkgHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigPkgHelperTxt,
		"assets/templates/config/pkg-helper.txt",
	)
}

func assetsTemplatesConfigPkgHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigPkgHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/pkg-helper.txt", size: 351, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesConfigTargetsHelperTxt = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x44\x8f\x41\x6e\x83\x40\x0c\x45\xf7\x3d\xc5\x57\xb2\x8d\x72\x88\xde\xa2\x4b\x67\xc6\x03\x56\x87\x31\x1a\x1b\x10\xb7\xaf\x09\x54\xd9\x78\xf1\xfc\xed\xa7\x7f\xc7\xcd\xa9\x0f\xec\x76\x83\xd3\x00\xaa\x55\x37\x43\xd1\x0e\x67\x73\x69\x81\x5a\x46\xe6\x95\xab\xce\x13\x37\x7f\xef\x56\xea\xa2\x8b\xc1\xd8\x8f\x8c\xbd\x43\x49\x5b\x91\x61\xe9\xe4\xa2\xcd\x9e\xf8\xd1\x05\x89\x1a\x52\x67\x72\xfe\xba\x63\x5a\xaa\xcb\x5c\x19\x97\x12\xdb\xc8\x9d\xb1\x5f\xb9\xcc\x45\x1a\x23\x4b\x29\x81\xc3\xe4\xfb\xcc\x06\x2d\x78\x29\xf5\x6c\x0f\x94\x4e\x13\x6f\xda\x7f\x4f\x61\xa9\x34\x84\xe7\x7b\x3f\x4e\x29\x9e\x43\xdb\xff\xf3\xd0\x89\x5d\xea\xfc\x08\x93\xa4\xf1\x20\xa7\x24\xe3\x45\x16\x53\xdb\xa7\xc2\xdc\x75\x95\x1c\x50\x1a\x7c\xe4\xf3\x36\x9a\x1c\x8b\xc4\x66\xcf\xbf\x00\x00\x00\xff\xff\xc8\xf7\x81\xf4\x2c\x01\x00\x00"

func assetsTemplatesConfigTargetsHelperTxtBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesConfigTargetsHelperTxt,
		"assets/templates/config/targets-helper.txt",
	)
}

func assetsTemplatesConfigTargetsHelperTxt() (*asset, error) {
	bytes, err := assetsTemplatesConfigTargetsHelperTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/config/targets-helper.txt", size: 300, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreClion = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x4d\x6e\xc2\x30\x10\x85\xf7\x73\x0a\x4b\xec\x40\x18\x7a\x82\xaa\x22\x8b\x2e\x40\x20\x05\xb5\x8b\xaa\x8a\xfc\x33\x4d\x06\x9c\xd8\xb5\x9d\x50\x6e\xdf\x49\x2a\x4a\xd5\x85\x9f\xc7\xf3\xde\x7c\xb6\x67\xe2\x42\x1e\x24\xcb\x0a\x60\x26\x36\x8e\x7c\x07\x9b\x9d\x3a\xe3\x96\x52\x4e\x87\x48\x83\xca\x28\xf3\x57\x06\x49\x16\xd5\x0a\x4c\xcb\xe6\x52\xf7\xe4\xec\xd2\xa2\xee\xeb\x69\x70\xa7\x8c\xd8\x97\x20\x8b\xb2\x2a\xb3\x8f\x78\xaf\x1e\x41\x3e\x85\xe0\xb0\xf0\xbd\x76\xdc\xdf\x96\xfb\x01\x63\x64\x18\xc8\x6a\x0e\xb2\x0c\x3e\x3b\xaa\x9b\xbc\x7c\x79\x58\xaf\x41\x1e\xa3\x4a\x0d\x26\xc0\x26\x37\x7d\xab\x93\xb4\x1a\x8e\xbf\x15\x5f\xf5\x4a\x9d\xf5\x97\x7b\xa0\x1a\xf8\xa5\x6a\x34\xdf\x0a\xfb\x8e\xe9\x9c\x7d\x90\xd4\x11\x4c\x1f\x5a\x2c\xc4\x21\x62\xc4\xcf\x9e\x12\x65\xe6\xce\xa5\xbd\x19\x1b\xdf\x06\x72\x68\xc5\x5e\x9f\xd0\x64\xf1\xc1\x87\x31\x90\x9c\x67\x9d\x64\x5a\xfa\xf4\x07\x65\x6e\x43\xcf\xa8\x2c\xc6\x31\x5f\x9b\x86\x35\xb0\xfe\x07\x17\xd7\x4e\xb5\x64\x84\x23\x1d\x55\xa4\x1f\xfa\xc8\xb4\x57\x6e\x8d\xbb\x73\xf0\x1d\x00\x00\xff\xff\x71\x80\x05\xad\x84\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreClionBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreClion,
		"assets/templates/gitignore/.gitignore-clion",
	)
}

func assetsTemplatesGitignoreGitignoreClion() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreClionBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-clion", size: 388, mode: os.FileMode(436), modTime: time.Unix(1529538768, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesGitignoreGitignoreGeneral = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\xcd\x4e\xeb\x30\x10\x85\xf7\xf3\x14\x96\xba\x6b\x75\x7d\xcb\x13\x20\xd4\x2c\x58\x80\x82\xe4\x0a\x16\x08\x45\xfe\x19\xea\x29\x4e\x6c\x6c\xa7\x55\xdf\x9e\x71\x51\x29\x62\x91\x2f\xc7\x33\xc7\x9f\x17\xe2\x48\x11\x24\xe3\x3f\xc0\x42\x3c\x6a\x2b\x7a\x05\xb2\x53\x83\xaa\x31\xe3\x35\xdd\x82\xbc\x4b\x29\x60\x17\x67\x13\x78\xfe\xa0\xfa\x03\xe6\x4c\x8e\xf3\xb0\x04\xa9\x52\xac\x81\x76\xbe\xfe\x7b\xbe\x59\xaf\x41\x6e\xb3\x2e\x1e\x0b\xa0\xaf\x7e\x1e\x4d\x91\xce\xc0\xf6\x27\xf1\x53\x2f\x34\xb9\x78\xbc\x16\x86\x03\x95\xaa\xdb\xf2\xb5\x73\x6f\x58\x3e\x6a\x4c\x92\x26\x82\x56\xde\xac\x56\xe2\x29\x63\xc6\xcf\x99\x0a\x55\xf6\x2e\xa5\xbb\x2c\x36\x71\x4c\x14\xd0\x89\xde\xec\xd1\x56\xf1\xce\x87\x56\x28\x21\x32\xcf\x38\x7f\x66\xff\x4b\x65\x2f\x97\xee\x51\x3b\xcc\xad\xbf\xb3\x9e\x99\x98\x7f\xc5\xdd\x69\xd2\x23\x59\x11\xc8\x64\x9d\xe9\xdb\xde\x9c\xee\xc4\xa3\xf6\x0f\x01\xbe\x02\x00\x00\xff\xff\x0b\x90\x5c\xd2\x4b\x01\x00\x00"

func assetsTemplatesGitignoreGitignoreGeneralBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesGitignoreGitignoreGeneral,
		"assets/templates/gitignore/.gitignore-general",
	)
}

func assetsTemplatesGitignoreGitignoreGeneral() (*asset, error) {
	bytes, err := assetsTemplatesGitignoreGitignoreGeneralBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/gitignore/.gitignore-general", size: 331, mode: os.FileMode(436), modTime: time.Unix(1529538771, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xcd\x6e\x83\x30\x10\x84\xef\x3c\x85\x15\xe5\x90\x1e\xd2\x77\x70\x8d\x5b\xd1\xd8\x38\x32\xa1\x4d\x4f\x96\x03\xab\xca\x2d\x3f\x29\xd8\x51\x24\xc4\xbb\x77\x09\x3d\x27\x87\x2a\x9c\x90\x67\x76\xbf\xd5\x68\x7a\xf0\xab\x37\xae\xc9\x30\x14\xb5\xfd\x86\xf5\x09\xba\xde\xb5\xcd\x38\x3e\x44\x93\x94\x52\xc9\x51\x3b\x76\xed\x17\x14\x7e\xdd\xd8\x1a\x26\x29\xba\x98\x4d\xed\x1a\x57\x87\xda\x74\xf0\x13\x5c\x07\xe5\xb4\x29\x4b\x54\x4a\x96\x03\xfe\x4d\xbe\xbf\xc1\xd5\x72\x98\x36\x8d\x84\x11\xb6\xdf\x13\x9a\x49\xd4\x5c\x53\x54\xa1\x84\xd5\x82\x49\x5c\x26\x5c\xef\xfb\x6d\xe7\x4e\xd6\xc3\xa3\x3f\xfb\x05\x3a\x6c\x59\x9a\x22\xf4\xbe\xad\x8d\xb7\xdd\x27\xde\x13\x11\xfc\xde\x99\xca\xa8\x79\xca\x13\x11\x13\x2a\xc4\xe5\x8d\x29\x29\x69\x1a\x23\x79\x56\x99\x8c\x47\x72\x08\xae\x2a\xe7\x11\xa5\x37\x49\xfa\x62\xe2\x44\x73\xb6\x53\xfa\x03\x8d\x4c\xd2\x0d\x37\x2c\xd7\x9a\xa7\x3b\x93\xa9\x5c\x33\x3e\x19\xc6\xe8\x16\x9a\x09\x4e\xd3\xeb\xe8\xa2\x02\xdb\xdc\x01\x9d\x6f\x63\xba\xe3\x06\xd9\xd7\xf9\xe1\x58\x62\x90\x77\x39\x40\x28\x7a\x23\xf7\x70\xac\x5a\xfb\x8f\xe0\xe1\x0c\x45\xf0\xf6\x50\x01\x16\x67\xab\xd5\x2b\x8e\x9a\xb9\x40\xcb\x21\xd3\xcc\x3c\x27\x82\x67\xd8\xaf\xdf\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsTxtTpl,
		"assets/templates/ide/clion/app/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xdd\x6e\x82\x30\x14\xc7\xef\x79\x8a\x86\x65\x09\x62\xd0\x67\x40\x60\x86\x4c\x65\xa1\x98\x79\x47\x6a\x5b\xa4\x19\x03\xd2\xe2\xa6\x21\x7d\xf7\xb5\x9a\x29\x1f\xd9\xe4\xa2\xe1\x7f\xce\xf9\x9d\xaf\x56\xd0\xc6\x7a\xf7\x22\xe8\xa6\xde\xda\x07\xf5\xb9\xc9\xab\x12\x98\x6d\xfb\x8d\x2b\x81\x9c\x1a\x35\xb9\x94\xf3\x8b\xb8\x9e\xb3\xfa\x6c\x4e\x0c\x03\x06\x89\xe5\xad\xdd\xd7\x20\xf5\x52\x2f\x5a\xbf\x85\xab\x20\x06\xe8\x8b\x3b\x07\x8c\x27\x5d\xef\x6e\x37\xf0\x4f\xa7\x43\xff\xcb\xca\x5d\xc2\xd4\x0f\x61\x12\x87\x8b\x6d\x12\x46\x1b\xdd\x00\xfe\x44\x1f\xd4\xc1\xa7\x93\x93\x15\xe8\x20\xa4\x34\x7b\xdc\xff\x54\x87\xd1\x03\xde\x6b\xc1\xc4\xdd\xf8\x6e\xec\x83\x6e\x01\xd1\xa0\x92\x20\x4e\xa4\x54\x93\x3d\x03\x42\x33\x47\x50\xc4\x71\x6e\xb4\x2d\x22\x24\x55\x06\x56\xb2\x86\x55\xa5\xb0\xda\xf6\x28\x28\x77\xee\x26\x05\x49\xa9\x28\x5a\x12\xc3\x78\x02\x2a\x1e\x5c\x61\xa0\x97\x27\x40\x56\x71\xa0\x17\xa7\x0e\x4e\x55\xdc\x65\xaf\xb7\xf4\xac\xc4\xc5\x91\xd0\x94\x30\x4e\x71\x53\x71\x46\x85\x75\xdb\xbe\x26\xf4\x0c\x2a\xff\x83\xc8\x7d\x75\x69\xdf\x7c\xdc\x0a\x2a\x0a\xd0\xe4\x14\xe8\x29\x40\xc1\xf6\x1c\xe9\x4c\x0a\x52\xff\xbf\x6d\xfd\x5d\x4d\x07\x5d\xdf\x44\xb7\x94\x91\xb1\x82\x5a\xcb\x55\xb4\x48\xe3\xc0\xdb\xc6\x30\x00\x30\x56\x37\xa4\x2e\x1d\x1a\x40\x7d\xa6\xe0\x78\x6e\xcf\x70\x5d\x9b\x3d\x8d\xfb\xb2\xab\xec\x71\xbc\x3d\x42\xec\x21\x35\xcb\xfb\x6a\x20\xc7\xf9\xf2\x91\x61\x6c\x51\x94\x7a\x17\x3f\x01\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionAppCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xcd\x6e\x83\x30\x10\x84\xef\x3c\x85\x15\xe5\x90\x1e\xd2\x77\x70\x8d\x5b\xd1\xd8\x38\x32\xa1\x4d\x4f\x96\x03\xab\xca\x2d\x3f\x29\xd8\x51\x24\xc4\xbb\x77\x09\x3d\x27\x87\x2a\x9c\x90\x67\x76\xbf\xd5\x68\x7a\xf0\xab\x37\xae\xc9\x30\x14\xb5\xfd\x86\xf5\x09\xba\xde\xb5\xcd\x38\x3e\x44\x93\x94\x52\xc9\x51\x3b\x76\xed\x17\x14\x7e\xdd\xd8\x1a\x26\x29\xba\x98\x4d\xed\x1a\x57\x87\xda\x74\xf0\x13\x5c\x07\xe5\xb4\x29\x4b\x54\x4a\x96\x03\xfe\x4d\xbe\xbf\xc1\xd5\x72\x98\x36\x8d\x84\x11\xb6\xdf\x13\x9a\x49\xd4\x5c\x53\x54\xa1\x84\xd5\x82\x49\x5c\x26\x5c\xef\xfb\x6d\xe7\x4e\xd6\xc3\xa3\x3f\xfb\x05\x3a\x6c\x59\x9a\x22\xf4\xbe\xad\x8d\xb7\xdd\x27\xde\x13\x11\xfc\xde\x99\xca\xa8\x79\xca\x13\x11\x13\x2a\xc4\xe5\x8d\x29\x29\x69\x1a\x23\x79\x56\x99\x8c\x47\x72\x08\xae\x2a\xe7\x11\xa5\x37\x49\xfa\x62\xe2\x44\x73\xb6\x53\xfa\x03\x8d\x4c\xd2\x0d\x37\x2c\xd7\x9a\xa7\x3b\x93\xa9\x5c\x33\x3e\x19\xc6\xe8\x16\x9a\x09\x4e\xd3\xeb\xe8\xa2\x02\xdb\xdc\x01\x9d\x6f\x63\xba\xe3\x06\xd9\xd7\xf9\xe1\x58\x62\x90\x77\x39\x40\x28\x7a\x23\xf7\x70\xac\x5a\xfb\x8f\xe0\xe1\x0c\x45\xf0\xf6\x50\x01\x16\x67\xab\xd5\x2b\x8e\x9a\xb9\x40\xcb\x21\xd3\xcc\x3c\x27\x82\x67\xd8\xaf\xdf\x00\x00\x00\xff\xff\xf6\xa5\x23\x29\xbe\x02\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsTxtTpl,
		"assets/templates/ide/clion/lib/CMakeLists.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeLists.txt.tpl", size: 702, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\xdd\x6e\x82\x30\x14\xc7\xef\x79\x8a\x86\x65\x09\x62\xd0\x67\x40\x60\x86\x4c\x65\xa1\x98\x79\x47\x6a\x5b\xa4\x19\x03\xd2\xe2\xa6\x21\x7d\xf7\xb5\x9a\x29\x1f\xd9\xe4\xa2\xe1\x7f\xce\xf9\x9d\xaf\x56\xd0\xc6\x7a\xf7\x22\xe8\xa6\xde\xda\x07\xf5\xb9\xc9\xab\x12\x98\x6d\xfb\x8d\x2b\x81\x9c\x1a\x35\xb9\x94\xf3\x8b\xb8\x9e\xb3\xfa\x6c\x4e\x0c\x03\x06\x89\xe5\xad\xdd\xd7\x20\xf5\x52\x2f\x5a\xbf\x85\xab\x20\x06\xe8\x8b\x3b\x07\x8c\x27\x5d\xef\x6e\x37\xf0\x4f\xa7\x43\xff\xcb\xca\x5d\xc2\xd4\x0f\x61\x12\x87\x8b\x6d\x12\x46\x1b\xdd\x00\xfe\x44\x1f\xd4\xc1\xa7\x93\x93\x15\xe8\x20\xa4\x34\x7b\xdc\xff\x54\x87\xd1\x03\xde\x6b\xc1\xc4\xdd\xf8\x6e\xec\x83\x6e\x01\xd1\xa0\x92\x20\x4e\xa4\x54\x93\x3d\x03\x42\x33\x47\x50\xc4\x71\x6e\xb4\x2d\x22\x24\x55\x06\x56\xb2\x86\x55\xa5\xb0\xda\xf6\x28\x28\x77\xee\x26\x05\x49\xa9\x28\x5a\x12\xc3\x78\x02\x2a\x1e\x5c\x61\xa0\x97\x27\x40\x56\x71\xa0\x17\xa7\x0e\x4e\x55\xdc\x65\xaf\xb7\xf4\xac\xc4\xc5\x91\xd0\x94\x30\x4e\x71\x53\x71\x46\x85\x75\xdb\xbe\x26\xf4\x0c\x2a\xff\x83\xc8\x7d\x75\x69\xdf\x7c\xdc\x0a\x2a\x0a\xd0\xe4\x14\xe8\x29\x40\xc1\xf6\x1c\xe9\x4c\x0a\x52\xff\xbf\x6d\xfd\x5d\x4d\x07\x5d\xdf\x44\xb7\x94\x91\xb1\x82\x5a\xcb\x55\xb4\x48\xe3\xc0\xdb\xc6\x30\x00\x30\x56\x37\xa4\x2e\x1d\x1a\x40\x7d\xa6\xe0\x78\x6e\xcf\x70\x5d\x9b\x3d\x8d\xfb\xb2\xab\xec\x71\xbc\x3d\x42\xec\x21\x35\xcb\xfb\x6a\x20\xc7\xf9\xf2\x91\x61\x6c\x51\x94\x7a\x17\x3f\x01\x00\x00\xff\xff\x38\x72\x86\x48\x29\x03\x00\x00"

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
		"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl",
	)
}

func assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl() (*asset, error) {
	bytes, err := assetsTemplatesIdeClionLibCmakelistsprivateTxtTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl", size: 809, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmeApp_readmeMd = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xa8\xae\x0e\x08\xf2\xf7\x72\x75\x0e\x89\xf7\x73\xf4\x75\xad\xad\xe5\xe2\x0a\xc9\xc8\x2c\x56\x00\xa2\x44\x85\xf2\xcc\x7c\x90\xbc\x8f\x63\x88\x9b\x7f\x90\x6f\x6d\xad\x42\x62\x41\x41\x4e\x66\x72\x62\x49\x66\x7e\x9e\x1e\x50\x61\xbe\x42\x52\x69\x66\x4e\x8a\x42\x09\x48\x07\x92\x9c\x15\x57\x42\x42\x42\x52\x62\x71\x06\x17\xc8\x84\xa2\xd2\x3c\x10\x9f\x0b\x10\x00\x00\xff\xff\x66\xa1\x39\x26\x6c\x00\x00\x00"

func assetsTemplatesReadmeApp_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmeApp_readmeMd,
		"assets/templates/readme/APP_README.md",
	)
}

func assetsTemplatesReadmeApp_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmeApp_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/APP_README.md", size: 108, mode: os.FileMode(436), modTime: time.Unix(1529538058, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesReadmePkg_readmeMd = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8e\xcb\xca\x83\x30\x10\x85\xf7\x79\x8a\x81\x7f\xed\x0b\xb8\xfa\x6d\xab\xd0\x8b\xa6\xa4\xd2\x2e\x9b\xd1\xc4\x2a\x5e\x22\xd1\x22\x45\x7c\xf7\x4e\x84\xd2\x45\x61\x16\xc3\x39\x73\xe6\x3b\x7f\x30\xcf\x67\xc1\x0f\xe1\x36\xbd\x27\x41\x1c\x2e\x0b\x63\x69\x59\x0d\x40\x83\x20\xa7\xca\x48\xe8\x31\xaf\xf1\xa1\xa1\x30\x96\x79\xd0\x37\x38\xd2\xd6\xfa\x2e\x79\x0a\xd2\x88\x8b\x98\x52\x1e\x14\x16\x5b\x3d\x19\x5b\x3b\x27\x12\xf4\xec\xc6\xc5\x71\xb5\x32\x83\x56\x39\x79\xc3\x03\xb1\x5b\x19\x06\xaa\x2e\x6f\x9e\x4a\xc3\xe8\x70\x1f\x06\x3a\xac\xd2\xbd\xee\x94\xee\xf2\x97\xcf\x98\x94\x32\xc3\xa1\x64\x54\xc5\x5d\x01\x2a\xf5\xd3\xf9\xff\x2b\x5c\x43\x71\xd9\xf3\x84\x18\x14\x64\xef\x00\x00\x00\xff\xff\xf3\xc2\x36\xe9\xdf\x00\x00\x00"

func assetsTemplatesReadmePkg_readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesReadmePkg_readmeMd,
		"assets/templates/readme/PKG_README.md",
	)
}

func assetsTemplatesReadmePkg_readmeMd() (*asset, error) {
	bytes, err := assetsTemplatesReadmePkg_readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/readme/PKG_README.md", size: 223, mode: os.FileMode(436), modTime: time.Unix(1529722102, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramAppMainCpp = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\xb0\xe3\x42\x13\xf6\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\x03\x4b\x72\xc1\xb9\x0a\x39\xa9\x29\x40\x4a\xc3\x29\x3f\xb1\x28\xc5\xca\xca\xc7\xd5\x45\xd3\x9a\x8b\xab\x2c\x3f\x33\x45\xa1\x38\xb5\xa4\xb4\x40\x43\x53\xa1\x9a\x4b\x01\x08\x80\xe6\x5a\x59\x25\xa5\xa6\x03\xd5\x02\x55\xd4\x42\xd5\xe4\xe4\xe7\x23\x94\x40\x8c\xd2\xcb\x07\xab\x00\x09\xa4\xa4\xe6\x24\x56\x6a\x98\x1a\x40\xb9\x30\xf9\xb4\x34\x74\x05\x06\x60\x23\x01\x01\x00\x00\xff\xff\xca\x5a\x2a\xce\xca\x00\x00\x00"

func assetsTemplatesSampleProgramAppMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramAppMainCpp,
		"assets/templates/sample-program/app/main.cpp",
	)
}

func assetsTemplatesSampleProgramAppMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramAppMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/app/main.cpp", size: 202, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgMainCpp = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x0a\x09\xd1\xcb\xc8\xb0\xe3\x42\x08\xe7\x97\x96\x14\x94\x96\xe8\x01\xc5\xb8\xca\xf2\x33\x53\x14\x8a\x53\x4b\x4a\x0b\x34\x34\x15\xaa\xb9\x14\x80\x00\xa8\xde\xca\x2a\x29\x35\x3d\x33\x4f\x43\xd3\x9a\xab\x16\xaa\x26\x27\x3f\x1f\xa1\x24\xa9\x34\x33\xa7\xc4\x27\x35\xc5\x1f\xac\x04\x24\x92\x92\x9a\x93\x58\xa9\x61\x6a\x00\xe5\xc2\x15\xa4\xa5\xa1\xab\x30\x00\x1b\x0a\x08\x00\x00\xff\xff\x09\x56\x5f\x0e\xa4\x00\x00\x00"

func assetsTemplatesSampleProgramPkgMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgMainCpp,
		"assets/templates/sample-program/pkg/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/main.cpp", size: 164, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputCpp = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\xf7\x2f\x2d\x29\x28\x2d\x09\xc8\xcc\xd3\xcb\xc8\xb0\xe3\x42\x48\xe6\x83\xc5\xf5\x80\x62\x5c\x70\x25\x0a\x39\xa9\x29\x40\x4a\xc3\x29\x3f\xb1\x28\xc5\xca\xca\xc7\xd5\x45\xd3\x9a\x8b\xab\x2c\x3f\x33\x45\x21\xa9\x34\x33\xa7\xc4\x27\x35\xc5\x3f\x4f\x43\x53\xa1\x9a\x4b\x01\x08\x20\x8a\xf5\xf2\x81\x22\xd6\x5c\xb5\xe8\xea\xd2\xd2\x30\x14\x82\x84\x40\x2a\x01\x01\x00\x00\xff\xff\x09\xae\xb8\x13\xa2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputCpp,
		"assets/templates/sample-program/pkg/output.cpp",
	)
}

func assetsTemplatesSampleProgramPkgOutputCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.cpp", size: 162, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgOutputH = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xce\x4c\xcb\x4b\x49\x4d\x53\xf0\x0f\x0d\x09\x08\x0d\x89\xf7\xe0\x52\x06\xf2\x32\xf3\x52\x11\x02\x5c\xfa\xfa\x0a\x21\xa5\x45\x79\xc5\x0a\x49\xa5\x99\x39\x25\x0a\x99\x79\x0a\x3e\xae\x2e\x0a\xfe\x7e\x0a\x1a\x01\x9e\x7e\x0a\x86\xc6\x9a\x5c\x65\xf9\x99\x29\x10\x59\x9f\xd4\x14\xff\x3c\x0d\x4d\x6b\x9c\xba\xdc\xdc\x70\x69\x4b\x4b\x03\xeb\x53\x4e\xcd\x4b\xc9\x4c\x53\xd0\xd7\x82\xbb\x40\x41\x4b\x9f\x0b\x10\x00\x00\xff\xff\xea\x03\x2b\xa5\xa7\x00\x00\x00"

func assetsTemplatesSampleProgramPkgOutputHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgOutputH,
		"assets/templates/sample-program/pkg/output.h",
	)
}

func assetsTemplatesSampleProgramPkgOutputH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgOutputHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg/output.h", size: 167, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\xce\xcc\x4b\xce\x29\x4d\x49\x55\xb0\x71\xce\x2f\x4e\xd4\x0f\x29\x4a\x4c\x4e\xd5\xcb\xc8\xb0\xe3\x42\x93\x08\x75\x0c\x0a\x41\x13\x2f\x28\xca\xcc\x2b\x49\x2d\xd2\x03\x0a\x72\x95\xe5\x67\xa6\x28\x14\xa7\x96\x94\x16\x68\x68\x2a\x54\x73\x29\x00\x41\x69\x62\x51\x89\x5e\x52\x6a\x7a\x66\x9e\x86\xa5\x99\x81\x81\xa6\x35\x58\xb4\x04\x6c\x01\x44\x58\x0d\xa4\x04\x28\x5e\x0b\xd5\x9f\x93\x9f\x8f\xd0\x5e\x9c\x58\xe9\x91\x9a\x93\x93\xaf\xa1\x14\x9e\x5f\x94\x93\xa2\x04\x51\x07\x08\x00\x00\xff\xff\xec\xd3\x87\xf9\xaf\x00\x00\x00"

func assetsTemplatesSampleProgramPkgHeaderOnlyMainCppBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp,
		"assets/templates/sample-program/pkg-header-only/main.cpp",
	)
}

func assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgHeaderOnlyMainCppBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg-header-only/main.cpp", size: 175, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4c\x4e\xb1\x6a\xc3\x30\x10\xdd\xef\x2b\x0e\x7b\x69\x3d\x54\x7b\x6b\xba\x14\x83\xbb\x14\x63\x0c\x1d\x83\x22\x9d\xd0\x81\x90\x82\x64\x27\x31\x21\xff\x1e\x59\x09\x24\xb7\xdc\xbb\xc7\x7b\xf7\x5e\xcd\xc6\x6b\x32\x38\x8c\xbf\x7f\x53\x37\xee\x7a\xa8\xf3\xc9\x9e\x5e\x18\xa8\xd9\x2b\xb7\x68\xc2\xf6\x27\x24\x29\xa6\x28\x15\x7d\x58\xfb\x0d\x20\x04\x0e\x91\xfd\x9c\xb0\x27\xe7\x02\x4a\xaf\x71\xb6\x84\xa7\x10\x35\xa6\x03\x29\x36\x4c\x1a\xf7\x6b\x61\x97\x44\x71\xb3\x74\xe7\xcf\x87\xfe\x3f\x44\xa7\xe1\x18\x38\xab\xe5\x5a\xb8\x37\x65\x65\x6c\xca\x87\x77\xbc\x00\xe6\x99\xb7\x40\x6c\x5b\xac\xee\xae\x6a\xc3\x25\x22\x6f\xf2\xda\x7d\xc1\x35\xb7\xcc\x88\x0d\x8a\xe6\x59\x1d\x1b\x01\xb7\x00\x00\x00\xff\xff\xd5\xea\xf2\x80\xe2\x00\x00\x00"

func assetsTemplatesSampleProgramPkgHeaderOnlyPrinterHBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH,
		"assets/templates/sample-program/pkg-header-only/printer.h",
	)
}

func assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH() (*asset, error) {
	bytes, err := assetsTemplatesSampleProgramPkgHeaderOnlyPrinterHBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/sample-program/pkg-header-only/printer.h", size: 226, mode: os.FileMode(436), modTime: time.Unix(1529535444, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/cli-helper/app-help.txt": assetsCliHelperAppHelpTxt,
	"assets/cli-helper/command-help.txt": assetsCliHelperCommandHelpTxt,
	"assets/cli-helper/subcommand-help.txt": assetsCliHelperSubcommandHelpTxt,
	"assets/configurations/structure-avr.json": assetsConfigurationsStructureAvrJson,
	"assets/templates/cmake/CMakeListsAVR.txt.tpl": assetsTemplatesCmakeCmakelistsavrTxtTpl,
	"assets/templates/cmake/CMakeListsNative.txt.tpl": assetsTemplatesCmakeCmakelistsnativeTxtTpl,
	"assets/templates/config/app-helper.txt": assetsTemplatesConfigAppHelperTxt,
	"assets/templates/config/dependencies-helper.txt": assetsTemplatesConfigDependenciesHelperTxt,
	"assets/templates/config/pkg-helper.txt": assetsTemplatesConfigPkgHelperTxt,
	"assets/templates/config/targets-helper.txt": assetsTemplatesConfigTargetsHelperTxt,
	"assets/templates/gitignore/.gitignore-clion": assetsTemplatesGitignoreGitignoreClion,
	"assets/templates/gitignore/.gitignore-general": assetsTemplatesGitignoreGitignoreGeneral,
	"assets/templates/ide/clion/app/CMakeLists.txt.tpl": assetsTemplatesIdeClionAppCmakelistsTxtTpl,
	"assets/templates/ide/clion/app/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl,
	"assets/templates/ide/clion/lib/CMakeLists.txt.tpl": assetsTemplatesIdeClionLibCmakelistsTxtTpl,
	"assets/templates/ide/clion/lib/CMakeListsPrivate.txt.tpl": assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl,
	"assets/templates/readme/APP_README.md": assetsTemplatesReadmeApp_readmeMd,
	"assets/templates/readme/PKG_README.md": assetsTemplatesReadmePkg_readmeMd,
	"assets/templates/sample-program/app/main.cpp": assetsTemplatesSampleProgramAppMainCpp,
	"assets/templates/sample-program/pkg/main.cpp": assetsTemplatesSampleProgramPkgMainCpp,
	"assets/templates/sample-program/pkg/output.cpp": assetsTemplatesSampleProgramPkgOutputCpp,
	"assets/templates/sample-program/pkg/output.h": assetsTemplatesSampleProgramPkgOutputH,
	"assets/templates/sample-program/pkg-header-only/main.cpp": assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp,
	"assets/templates/sample-program/pkg-header-only/printer.h": assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"cli-helper": &bintree{nil, map[string]*bintree{
			"app-help.txt": &bintree{assetsCliHelperAppHelpTxt, map[string]*bintree{}},
			"command-help.txt": &bintree{assetsCliHelperCommandHelpTxt, map[string]*bintree{}},
			"subcommand-help.txt": &bintree{assetsCliHelperSubcommandHelpTxt, map[string]*bintree{}},
		}},
		"configurations": &bintree{nil, map[string]*bintree{
			"structure-avr.json": &bintree{assetsConfigurationsStructureAvrJson, map[string]*bintree{}},
		}},
		"templates": &bintree{nil, map[string]*bintree{
			"cmake": &bintree{nil, map[string]*bintree{
				"CMakeListsAVR.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsavrTxtTpl, map[string]*bintree{}},
				"CMakeListsNative.txt.tpl": &bintree{assetsTemplatesCmakeCmakelistsnativeTxtTpl, map[string]*bintree{}},
			}},
			"config": &bintree{nil, map[string]*bintree{
				"app-helper.txt": &bintree{assetsTemplatesConfigAppHelperTxt, map[string]*bintree{}},
				"dependencies-helper.txt": &bintree{assetsTemplatesConfigDependenciesHelperTxt, map[string]*bintree{}},
				"pkg-helper.txt": &bintree{assetsTemplatesConfigPkgHelperTxt, map[string]*bintree{}},
				"targets-helper.txt": &bintree{assetsTemplatesConfigTargetsHelperTxt, map[string]*bintree{}},
			}},
			"gitignore": &bintree{nil, map[string]*bintree{
				".gitignore-clion": &bintree{assetsTemplatesGitignoreGitignoreClion, map[string]*bintree{}},
				".gitignore-general": &bintree{assetsTemplatesGitignoreGitignoreGeneral, map[string]*bintree{}},
			}},
			"ide": &bintree{nil, map[string]*bintree{
				"clion": &bintree{nil, map[string]*bintree{
					"app": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionAppCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
					"lib": &bintree{nil, map[string]*bintree{
						"CMakeLists.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsTxtTpl, map[string]*bintree{}},
						"CMakeListsPrivate.txt.tpl": &bintree{assetsTemplatesIdeClionLibCmakelistsprivateTxtTpl, map[string]*bintree{}},
					}},
				}},
			}},
			"readme": &bintree{nil, map[string]*bintree{
				"APP_README.md": &bintree{assetsTemplatesReadmeApp_readmeMd, map[string]*bintree{}},
				"PKG_README.md": &bintree{assetsTemplatesReadmePkg_readmeMd, map[string]*bintree{}},
			}},
			"sample-program": &bintree{nil, map[string]*bintree{
				"app": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramAppMainCpp, map[string]*bintree{}},
				}},
				"pkg": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgMainCpp, map[string]*bintree{}},
					"output.cpp": &bintree{assetsTemplatesSampleProgramPkgOutputCpp, map[string]*bintree{}},
					"output.h": &bintree{assetsTemplatesSampleProgramPkgOutputH, map[string]*bintree{}},
				}},
				"pkg-header-only": &bintree{nil, map[string]*bintree{
					"main.cpp": &bintree{assetsTemplatesSampleProgramPkgHeaderOnlyMainCpp, map[string]*bintree{}},
					"printer.h": &bintree{assetsTemplatesSampleProgramPkgHeaderOnlyPrinterH, map[string]*bintree{}},
				}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

